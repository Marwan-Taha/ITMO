@startuml
package "MyCLasses"{
    package Characters{
        abstract class AbstractCharacter{
            -String Name;
            -Dress dress;

            +AbstractCharacter(){}
            +AbstractCharacter(String name);
            +void assignName(String name));
            +void assignDress(Dress dress);
            +Dress getDress();
            +String getName();
            +String toString();
            +boolean equals(Object obj);
            +int hashCode();
        }
        class Character{
            +Character(String name);
            +Character(String name, Dress dress);
            +void interact();
            +void caressed();
            +void embrace();
            +void bury();
            +void press();
            +void showEffect();
        }
    }
    package decorations{
        abstract class Decoration{
            -String DecorationName;
            +Decoration(String decorationName)
            +String getDecorationInfo();
            +String toString();
            +boolean equals(Object obj);
            +int hashCode();
        }

        class ColoredSparkles{
            +ColoredSparkles();
        }

        class Swansdown{
            +Swansdown()
        }
    }
    package Dresses{
        abstract class AbstractDress{
            -Colors DressColor;
            -Material DressMaterial;
            -Decorations DressDecorations;
            boolean hanging;

            +AbstractDress(Colors color, Material material);
            +AbstractDress(Colors color, Material material, Decorations decorations);


            +String toString();
            +boolean equals(Object obj);
            +int hashCode();

            +Colors getDressColor();

            +Material getDressMaterial();

            +Decorations getDressDecorations();

            +String getMaterialDescription();

            +MaterialType getMaterialType();

            +String getDecorationInfo();

            +boolean isHanging();
        }

        class MyDress{
            -static ArrayList<MyDress> Dresses = new ArrayList<>();
            +MyDress(Colors color, Material material);
            +MyDress(Colors color, Material material, Decorations decorations);
            +void interact();
        }


    }
    package materials{

        abstract class MyMaterial{
            -final String description;
            -final MaterialType materialType;

            +MyMaterial(String materialDescription, MaterialType type);
            +String getMaterialDescription();
            +MaterialType getMaterialType();
            +String toString();
            +boolean equals(Object obj);
            +int hashCode();
        }

        class Brocade{
            +Brocade(MaterialType Type);
        }

        class Silk{
            +Silk(MaterialType Type);
        }

        class Tulle{
            +Tulle(MaterialType Type);
        }


    }

}


package MyEnums{
    enum Colors{
        BLACK, WHITE , RED , BLUE
    }

    enum MaterialType{
        HEAVY, LIGHT ,PRINTED
    }
}


package MyInterfaces{
    interface Affectable{
        void showEffect();
    }

    interface BuryAble{
        void bury();
    }

    interface CaressedAble{
        void caressed();
    }

    interface Decorations{
        String getDecorationInfo();;
    }

    interface Dress {
        Colors getDressColor();

        Material getDressMaterial();

        Decorations getDressDecorations();

        boolean isHanging();
    }

    interface EmbraceAble{
        void embrace();
    }

    interface ICharacter{
        String getName();
    }

    interface InteractAble{
        void interact();
    }

    interface Material{
        String getMaterialDescription();
        MaterialType getMaterialType();
    }

    interface PressAble{
        void press();
    }

}

AbstractCharacter ---> ICharacter
Character --> CaressedAble
Character --> InteractAble
Character --> EmbraceAble
Character --> BuryAble
Character --> PressAble
Character --> AffectAble

Decoration --> Decorations
ColoredSparkles --> Decoration
Swansdown --> Decoration

AbstractDress --> InteractAble
AbstractDress --> Dress

MyDress --> AbstractDress

MyMaterial --> Material
Brocade --> MyMaterial
Silk --> MyMaterial
Tulle --> MyMaterial
@enduml